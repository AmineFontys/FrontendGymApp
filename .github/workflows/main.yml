name: build Docker + Compose

on: [push]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      name: Checkout repository

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'  # This line already asks setup-node to cache npm modules, but it uses setup-node's built-in caching

    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Install dependencies
      run: npm install
      
    - name: Build Angular project
      run: npm run build -- --configuration production

  build-and-push-docker:
    needs: build-frontend
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      name: Checkout repository for Docker

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image for frontend
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: aminefontys/frontendgymapp-frontend:latest

  docker-compose-deploy:
    needs: build-and-push-docker
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      name: Checkout repository for Docker Compose

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker images using Docker Compose
      run: |
        docker-compose build
        docker-compose push
